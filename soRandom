Level-2 Task
It seems to be outputting the flag but randomizing all the characters first. Is there anyway to get back the original flag? 
We are given: sorandom.py

#!/usr/bin/python -u
import random,string

flag = "FLAG:"+open("flag", "r").read()[:-1]  
encflag = ""  
random.seed("random")  
for c in flag:  
  if c.islower():
    #rotate number around alphabet a random amount
    encflag += chr((ord(c)-ord('a')+random.randrange(0,26))%26 + ord('a'))
  elif c.isupper():
    encflag += chr((ord(c)-ord('A')+random.randrange(0,26))%26 + ord('A'))
  elif c.isdigit():
    encflag += chr((ord(c)-ord('0')+random.randrange(0,10))%10 + ord('0'))
  else:
  
  /////////
The encryption algorithm = random value would rotate

The decryption algorithm = rotate the other way by using the same random value
///////


#!/usr/bin/python -u
import random,string

ct = "BNZQ:3o8b2bgl0689u4aj640407963277k0fc"

random.seed("random")  
# randints = [random.randrange(0,26) for i in range(len(ct))]


flag = ""  
for c in ct:  
  if c.islower():
#    flag += chr((ord(c)-ord('a')+random.randrange(0,26))%26 + ord('a'))
    flag += chr((ord(c)-ord('a')-random.randrange(0,26))%26 + ord('a'))
  elif c.isupper():
#    flag += chr((ord(c)-ord('A')+random.randrange(0,26))%26 + ord('A'))
    flag += chr((ord(c)-ord('A')-random.randrange(0,26))%26 + ord('A'))
  elif c.isdigit():
#    flag += chr((ord(c)-ord('0')+random.randrange(0,10))%10 + ord('0'))
    flag += chr((ord(c)-ord('0')-random.randrange(0,10))%10 + ord('0'))
  else:
    flag += c
print "Unguessably Randomized Flag: "+flag  
